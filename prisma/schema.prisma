generator client {
  provider = "prisma-client-js"
}

datasource db {
  // NOTE: You probably want to change this to another database later on
  provider = "mysql"

  // This value is read from the .env file.
  url = env("DATABASE_URL")
}

// 分类
model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?
  image       String?

  // 分类可以包含多个商品
  products CategoryProduct[]

  // 分类有父级分类, 一个父级分类可以包含多个子分类,父级分类在数据库建立时确定了,不可更改
  parentId Int?
  parent   Category?  @relation("Parents", fields: [parentId], references: [id])
  children Category[] @relation("Parents")
}

// 商品
model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String
  price       Decimal
  stock       Int
  image       Image[]

  categorys CategoryProduct[]
}

// 多对多关系, 一个商品可以属于多个分类, 一个分类可以包含多个商品
model CategoryProduct {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

// 健身百科
model Encyclopedia {
  id Int @id @default(autoincrement())

  // 时间记录
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 标题
  title   String
  content String?
  image   Image[]

  categorys EncyclopediaJoinCategory[]
}

// 健身百科分类
model EncyclopediaCategory {
  id Int @id @default(autoincrement())

  // 时间记录
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name         String
  description  String?
  image        String? // 分类图片,可能大概用不上,先设计放着
  sncyclopedia EncyclopediaJoinCategory[]
}

model EncyclopediaJoinCategory {
  id Int @id @default(autoincrement())

  // 时间记录
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category   EncyclopediaCategory @relation(fields: [categoryId], references: [id])
  categoryId Int

  product   Encyclopedia @relation(fields: [productId], references: [id])
  productId Int
}

// 图片,为了方便图片管理,单独建立一个表
model Image {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url String
  alt String?

  Product        Product?      @relation(fields: [productId], references: [id])
  productId      Int?
  Encyclopedia   Encyclopedia? @relation(fields: [encyclopediaId], references: [id])
  encyclopediaId Int?
}
